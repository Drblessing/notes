services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    user: '65534:65534' # run as nobody
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.listen-address=0.0.0.0:9090
    volumes:
      - ./prometheus:/etc/prometheus:ro
      - prometheus-data:/prometheus # <-- named volume (no host perms drama)
    ports:
      - '9091:9090'
    restart: unless-stopped
    networks: [monitoring]

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    user: '472:472' # grafana user
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      - grafana-data:/var/lib/grafana # <-- named volume
    ports:
      - '3000:3000'
    depends_on:
      - dashboard-provisioner
      - prometheus
    restart: unless-stopped
    networks: [monitoring]

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    pid: host
    command: ['--path.rootfs=/host']
    volumes:
      - /:/host:ro,rslave
    restart: unless-stopped
    networks: [monitoring]

  dashboard-provisioner:
    image: busybox:stable
    container_name: grafana-dashboard-provisioner
    command: >
      sh -c "wget -qO /dashboards/node-exporter-full.json
      https://grafana.com/api/dashboards/1860/revisions/latest/download
      && echo 'Node Exporter Full dashboard downloaded.'"
    volumes:
      - ./grafana/dashboards:/dashboards
    networks: [monitoring]
    restart: 'no'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus-data: {}
  grafana-data: {}
