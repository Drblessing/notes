services:
  prometheus:
    image: prom/prometheus:v3.5.0 # pin for stability
    container_name: prometheus
    user: '65534:65534' # run as nobody (Prom defaults)
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.listen-address=0.0.0.0:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - '9091:9090' # host:container (9090 used by Cockpit)
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'wget -qO- http://localhost:9090/-/ready >/dev/null 2>&1 || exit 1',
        ]
      interval: 15s
      timeout: 5s
      retries: 10
    networks: [monitoring]

  grafana:
    image: grafana/grafana-oss:latest # feel free to pin later
    container_name: grafana
    user: '472:472' # grafana user
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin # change on first login
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - '3000:3000'
    depends_on:
      prometheus:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'wget -qO- http://localhost:3000/api/health 2>/dev/null | grep -q ok || exit 1',
        ]
      interval: 15s
      timeout: 5s
      retries: 20
    networks: [monitoring]

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    pid: host
    command: ['--path.rootfs=/host']
    volumes:
      - /:/host:ro,rslave
    restart: unless-stopped
    networks: [monitoring]

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus-data: {}
  grafana-data: {}
